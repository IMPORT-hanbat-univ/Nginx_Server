user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {

###################################################
################# 동아리 홈페이지 설정 #################
###################################################
	# 백엔드 upstream 설정
    # upstream myweb-api {
    #     server api:8080;
    # }

	# 프론트엔드 upstream 설정
    # upstream import-front {
    #     server next-front:3000; # docker를 사용하지 않는다면 localhost:3000(웹서버주소)
    # }

    # # 백엔드 upstream 설정
    # upstream import-back{
    #     server node-back:4000;
    # }


###################################################
################# 동아리 CI/CD Pipelin ##############
###################################################

    # Jenkins updtream 설정
    upstream import-jenkins{
        server jenkins:8080;
    }

    ## Nexus upstream 설정
    upstream import-nexus{
        server nexus:8081;
    }

    # server {
    #     listen 80 default_server;
    #     server_name import-hanbat.com;
	# 	# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
    #     # location /api {
    #     #     proxy_pass         http://myweb-api/api;
    #     # }

	# 	# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
    #     location / {
    #         proxy_pass         http://import-front/;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }

    server {
        listen 443 ssl;
        server_name import-jenkins.cloud;
		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        # location /api {
        #     proxy_pass         http://myweb-api/api;
        # }

        ssl_certificate /etc/nginx/ssl/import.crt;
        ssl_certificate_key /etc/nginx/ssl/import.key;
        ssl_prefer_server_ciphers on;
		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            proxy_pass         http://import-jenkins/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
    server {
        listen 443;
        server_name import-nexus.cloud;
		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        # location /api {
        #     proxy_pass         http://myweb-api/api;
        # }
        
        ssl_certificate /etc/nginx/ssl/import.crt;
        ssl_certificate_key /etc/nginx/ssl/import.key;
        ssl_prefer_server_ciphers on;

		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            proxy_pass         http://import-nexus/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}